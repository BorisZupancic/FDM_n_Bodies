/home/boris/Documents/Research/FDM_n_Bodies/1D_Codes/Programs/Analysis/TestingEquilibriumICs/NBody_Mixed
/home/boris/Documents/Research/FDM_n_Bodies
---------------------New Sim---------------------
L = 2.000000
FDM percentage by mass : 0.000000 
Num_particles 50000
Fixed Potential: n
BC choice : 1
sim choice : 2
Collapse Times : 1024
ICs choice : 3
Variable Mass : y 
Fraction : 1/600 
 
Specify Path to create folder for saving images.
/home/boris/Documents/Research/FDM_n_Bodies/1D_Codes/Programs/Analysis/TestingEquilibriumICs/NBody_Mixed
Length scale L = 1
Velocity scale v = 1
Time scale T = 1.0
Mass scale M = 1

Choose a (non-dimensional) box length:

Choose percentage (as a decimal) of FDM (by mass)
Fraction of Particles (by mass) = 1.0


How many particles?
Num_stars = 50000
sigma = 2e-05
Num_Bosons = 0.0
mu = 1
lambda_deB = None
Number of Grid points: 1000

Do you want a fixed potetial (phi = 0.5*sigma*(2z/L)**2 - 1)? Choose [y/n]
n

Isolated [1] or Periodic [2] boundary conditions?
1

Do you want the full simulation [1] or snapshots [2]? Choose [1/2]
2

How long to run for? Enter Integer for number of dynamical times:
Will run for 1024 dynamical times

Initial Conditions: Gaussian, Sine^2, or Spitzer? Enter [1,2,or 3]:
3.0
---Creating Initial Conditions---
Mass from distribution function: M = 0.4663576831051987
cut-off in z 0.32232232232231506
-----Sampling Stars-----
Re-centering position and velocity centroids.
z_centroid = 0.0001408852233319782, v_centroid = -0.0038422367070924317
z_centroid = 2.7267077484793843e-18, v_centroid = -4.050093593832571e-18
z_rms = 0.1026774172281466
v_rms = 0.41296516959923757
t_dynamical = 0.24863456966065686
Spitzer ICs instantiated.

Variable Star Masses [y/n]? (Split in two)
[Y]
Input fraction of stars to convert to heavy:
1/600
Splitting Stars in Two...
Number of heavier particles: 83
83
len(stars1) = 83
len(stars2) = 49917
len(stars) = 50000

/home/boris/Documents/Research/FDM_n_Bodies
True
/home/boris/Documents/Research/FDM_n_Bodies/1D_Codes/Programs/Analysis/TestingEquilibriumICs/NBody_Mixed/SigmaRatio(601.4096385542169)_50000ParticlesOnly_Snapshots
Calculating and Plotting...
integral of |chi|^2 : 0.0
Numerically calculated integral of |psi|^2 : 0.0
Density Normalization Check: 0.46635768310519865
v_min = -1569.225530468137, v_max = 1569.225530468137
Snapshots at i = [    0    10    20    40    80   160   320   640  1280  2560  5120 10240]
Sim will stop at tau = 254.60179933251263
a_max = 5.857491807175265
/home/boris/Documents/Research/FDM_n_Bodies/OneD/FDM.py:125: RuntimeWarning: invalid value encountered in true_divide
  F_s = F_s/Norm_const
Calculation and Plotting Done. Now Saving Data...
Data Saved.
Executed in 6888.8498775959015 seconds = 114.81416462659836 minutes = 1.9135694104433059 hours.
/usr/lib/python3/dist-packages/numpy/lib/npyio.py:1378: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  X = np.asarray(X)
---------------------New Sim---------------------
L = 2.000000
FDM percentage by mass : 0.000000 
Num_particles 50000
Fixed Potential: n
BC choice : 1
sim choice : 2
Collapse Times : 1024
ICs choice : 3
Variable Mass : y 
Fraction : 1/700 
 
Specify Path to create folder for saving images.
/home/boris/Documents/Research/FDM_n_Bodies/1D_Codes/Programs/Analysis/TestingEquilibriumICs/NBody_Mixed
Length scale L = 1
Velocity scale v = 1
Time scale T = 1.0
Mass scale M = 1

Choose a (non-dimensional) box length:

Choose percentage (as a decimal) of FDM (by mass)
Fraction of Particles (by mass) = 1.0


How many particles?
Num_stars = 50000
sigma = 2e-05
Num_Bosons = 0.0
mu = 1
lambda_deB = None
Number of Grid points: 1000

Do you want a fixed potetial (phi = 0.5*sigma*(2z/L)**2 - 1)? Choose [y/n]
n

Isolated [1] or Periodic [2] boundary conditions?
1

Do you want the full simulation [1] or snapshots [2]? Choose [1/2]
2

How long to run for? Enter Integer for number of dynamical times:
Will run for 1024 dynamical times

Initial Conditions: Gaussian, Sine^2, or Spitzer? Enter [1,2,or 3]:
3.0
---Creating Initial Conditions---
Mass from distribution function: M = 0.4663576831051987
cut-off in z 0.32232232232231506
-----Sampling Stars-----
